Repetições
    Repetições podem ser a base de vários programas. São utilizadas para executar
a mesma parte de um programa várias vezes. Por exemplo, para imprimir varias vezes um números na tela
poderíamos escrever um programa como:
        Imprimindo de 1 a 3.
            print(1)
            print(2)
            print(3)
    Podemos imaginar que para imprimir três números, começando de 1 até o 3,
devemos variar print(x), onde x varia de 1 a 3. Vejamos outra solução para o
problema:
        x=1
        print(x)
        x=2
        print(x)
        x=3
        print(x)
   Outra solução seria incrementar o valor de x após cada print.
        Imprimindo de 1 a 3 incrementando
            x=1
            print(x)
            x=x+1
            print(x)
            x=x+1
            print(x)
Porém, se o objetivo fosse escrever 100 números, a solução não seria tão agradável, pois teríamos que escrever pelo menos 200 linhas! A estrutura de repetição
aparece para nos auxiliar a resolver esse tipo de problema.
Uma das estruturas de repetição do Python é o while, que repete um bloco enquanto a condição for verdadeira. Onde condição é uma expressão lógica, e bloco
representa as linhas de programa a repetir enquanto o resultado da condição for verdadeiro.
 Formato da estrutura de repetição com while
         Imprimindo de 1 a 3 com while
            x=1 ❶
            while x<=3: ❷
                print(x) ❸
                x = x + 1 ❹
Exercício 1: Modifique o programa para exibir os números de 1 a 100.

x = 1           # começamos em 1
while x <= 100: # termina em 100
    print(x)    # imprimi o valor atual
    x = x + 1   # incrementa o contador

Exercício 2: Modifique o programa para exibir os números de 50 a 100.

x = 50          # começamos em 50
while x <= 100: # termina em 100
    print(x)    # imprimi o valor atual
    x = x + 1   # incrementa o contador

Exercício 3: Faça um programa para escrever a contagem regressiva do lançamento de um foguete. O programa deve imprimir 10, 9, 8, ..., 1, 0 e Fogo! na tela.

x = 1           # começamos em 1
while x >= 10:  # queremos até os 10 primeiros
    print(x)    # imprimi o valor atual
    x = x - 1   # incrementa o contador

Exercício 4: Modifique o programa anterior para imprimir de 1 até o número digitado pelo usuário, mas, dessa vez, apenas os números ímpares.

fim = int(input('Digite um número para ser o final da contagem: '))
x = 0
while x <= fim:
    if x % 2 != 0:   # condição para ímpar
        print(x)     # imprimi o valor atual
    x = x + 1        # incrementa o contador

Exercício 5: Reescreva o programa anterior para escrever os 10 primeiros múltiplos de 3.

x = 1   # começamos em 1
while x <= 10:   # queremos apenas os 10 primeiros
    print(3 * x) # múltiplo de 3
    x = x + 1    # incrementa

Exercício 6: Altere o programa anterior para exibir os resultados no mesmo formato de uma tabuada: 2x1 = 2, 2x2=4, ...

n = int(input("Tabuada de:"))
x = 1
    while x <= 10:   # queremos apenas os 10 primeiros
        print(n * x) # múltiplo de n
        x= x + 1     # incrementa

Exercício 7: Modifique o programa anterior de forma que o usuário também digite o início e o fim da tabuada, em vez de começar com 1 e 10.

n = int(input("Tabuada de: "))
inicio = int(input("Início da tabuada: "))
fim = int(input("Fim da tabuada: "))

x = inicio
while x <= fim:
    print(f"{n} x {x} = {n * x}")
    x = x + 1

Exercício 8: Escreva um programa que leia dois números. Imprima o resultado da multiplicação do primeiro pelo segundo. Utilize apenas os operadores de soma e
subtração para calcular o resultado. Lembre-se de que podemos entender a multiplicação de dois números como somas sucessivas de um deles. Assim, 4 × 5 = 5
+ 5 + 5 + 5 = 4 + 4 + 4 + 4 + 4.

a = int(input("Digite o primeiro número: "))
b = int(input("Digite o segundo número: "))

resultado = 0
x = 0

while x < b:        # soma 'a' exatamente 'b' vezes
    resultado = resultado + a
    x = x + 1

print(f"{a} x {b} = {resultado}")

Exercício 9: Escreva um programa que leia dois números. Imprima a divisão inteira do primeiro pelo segundo, assim como o resto da divisão. Utilize apenas
os operadores de soma e subtração para calcular o resultado. Lembre-se de que podemos entender o quociente da divisão de dois números como a quantidade
de vezes que podemos retirar o divisor do dividendo. Logo, 20 ÷ 4 = 5, uma vez que podemos subtrair 4 cinco vezes de 20.

a = int(input("Digite o dividendo: "))
b = int(input("Digite o divisor: "))

quociente = 0
resto = a

while resto >= b:     # enquanto ainda dá para subtrair
    resto = resto - b
    quociente = quociente + 1

print(f"{a} ÷ {b} = {quociente} (resto {resto})")

Exercício 10: Modifique o programa para que aceite respostas com letras maiúsculas e minúsculas em todas as questões.

pontos = 0
questão = 1
while questão <= 3:
    resposta = input("Resposta da questão %d: " % questão)
    if questão == 1 and resposta == "b":
        pontos = pontos + 1
    if questão == 2 and resposta == "a":
        pontos = pontos + 1
    if questão == 3 and resposta == "d":
        pontos = pontos + 1
    questão +=1
print("O aluno fez %d ponto(s)" % pontos)

resposta:
pontos = 0
questao = 1

while questao <= 3:
    resposta = input("Resposta da questão %d: " % questao)
    resposta = resposta.lower()  # transforma sempre em minúscula

    if questao == 1 and resposta == "b":
        pontos = pontos + 1
    if questao == 2 and resposta == "a":
        pontos = pontos + 1
    if questao == 3 and resposta == "d":
        pontos = pontos + 1

    questao += 1

print("O aluno fez %d ponto(s)" % pontos)
